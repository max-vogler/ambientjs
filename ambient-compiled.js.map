{"version":3,"sources":["ambient.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,SAAS,cAAc,GAAG;;;AACtB,QAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC;AACpC,QAAI,CAAC,SAAS,GAAG,cAAc,CAAC;AAChC,QAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AACnB,QAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,QAAI,CAAC,cAAc,GAAG,GAAG,CAAC;AAC1B,QAAI,CAAC,YAAY,GAAG,GAAG,CAAC;;AAExB,QAAG,cAAc,EAAE;;;;;;AACf,iCAAe,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,8HAAE;oBAApC,GAAG;;AACP,oBAAI,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;aACnC;;;;;;;;;;;;;;;KACJ;;AAED,QAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC1C,QAAI,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;AAC5D,QAAI,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,CAAC,CAAC;AACtF,QAAI,gBAAgB,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,gCAAgC,CAAC,CAAC,CAAC;;AAElG,QAAI,YAAY,GAAG,IAAI,CAAC;AACxB,QAAI,YAAY,GAAG,YAAY,CAAC;;AAEhC,QAAI,SAAS,iNAIuC,IAAI,CAAC,YAAY,oEACjB,IAAI,CAAC,YAAY,oEACjB,IAAI,CAAC,YAAY,oGAGtD,CAAC;;AAEhB,QAAI,GAAG,2EAEoC,IAAI,CAAC,cAAc,6BAAwB,IAAI,CAAC,cAAc,6EACtD,IAAI,CAAC,cAAc,6BAAwB,IAAI,CAAC,cAAc,mVAY5G,CAAC;;AAEN,QAAI,CAAC,QAAQ,GAAG,YAAY;AACxB,eAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC;KAC5C,CAAC;;AAEF,QAAI,CAAC,QAAQ,GAAG,UAAU,QAAQ,EAAkB;YAAhB,OAAO,yDAAG,IAAI;;AAC9C,YAAI,QAAQ,KAAK,YAAY,EAAE;AAC3B,mBAAO;SACV;AACD,oBAAY,GAAG,QAAQ,CAAC;;AAExB,eAAO,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;AACpE,eAAO,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;;AAEvE,eAAO,CAAC,OAAO,CAAC,UAAA,MAAM,EAAI;AACtB,kBAAM,CAAC,OAAO,GAAG,CAAC,QAAQ,CAAC;AAC3B,kBAAM,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;SAC9D,CAAC,CAAC;;AAEH,YAAI,CAAC,KAAK,EAAE,CAAC;KAChB,CAAC;;AAEF,QAAI,CAAC,YAAY,GAAG,UAAU,WAAW,EAAE;;;AACvC,YAAI,CAAC,SAAS,GAAG,WAAW,CAAC;;AAE7B,wBAAgB,CAAC,OAAO,CAAC,UAAC,MAAM,EAAK;AACjC,gBAAG,WAAW,EAAE;AACZ,sBAAK,QAAQ,CAAC,MAAK,QAAQ,EAAE,CAAC,CAAC;AAC/B,sBAAM,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aAClC,MAAM;AACH,sBAAM,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACrC;SACJ,CAAC,CAAC;KACN,CAAC;;AAEF,QAAI,CAAC,KAAK,GAAG,YAAY;AACrB,YAAI,CAAC,YAAY,EAAE;AACf,mBAAO;SACV;;AAED,YAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,KAAK,GAAG,OAAO,CAAC;AAChD,oBAAY,CAAC,SAAS,yBAAuB,OAAO,sCAAiC,IAAI,CAAC,UAAU,sCAAiC,IAAI,CAAC,SAAS,uCAAiC,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAA,cAAW,CAAC;KAChO;;;AAAC,AAGF,QAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;;;AAAC,AAG5B,QAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC5C,SAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AAChD,YAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACjC,YAAQ,CAAC,KAAK,CAAC,SAAS,CAAC;;;AAAC,AAG1B,UAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,UAAC,KAAK,EAAK;AAC9C,eAAK,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC;AAC9B,eAAK,KAAK,EAAE,CAAC;;AAEb,YAAI,OAAK,SAAS,EAAE;AAChB,mBAAK,QAAQ,CAAC,OAAK,QAAQ,EAAE,CAAC,CAAC;SAClC;KACJ,CAAC;;;AAAC,AAGH,WAAO,CAAC,OAAO,CAAC,UAAC,MAAM,EAAK;;AAExB,cAAM,CAAC,QAAQ,GAAG,UAAA,KAAK,EAAI;AACvB,gBAAI,QAAQ,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;;AAErC,gBAAI,YAAY,KAAK,QAAQ,EAAE;AAC3B,uBAAK,YAAY,CAAC,KAAK,CAAC,CAAC;AACzB,uBAAK,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC3B;SACJ,CAAC;KACL,CAAC,CAAC;;AAEH,oBAAgB,CAAC,OAAO,CAAC,UAAC,MAAM,EAAK;AACjC,cAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,KAAK,EAAK;AACxC,mBAAK,YAAY,CAAC,CAAC,OAAK,SAAS,CAAC,CAAC;AACnC,mBAAK,KAAK,EAAE,CAAC;SAChB,CAAC,CAAC;KACN,CAAC,CAAC;CACN;;AAED,MAAM,CAAC,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC","file":"ambient-compiled.js","sourcesContent":["'use strict';\n\nfunction AmbientLightJS() {\n    this.brightClass = 'ambient-bright';\n    this.darkClass = 'ambient-dark';\n    this.threshold = 5;\n    this.automatic = true;\n    this.transitionTime = 1.5;\n    this.darkenFactor = 0.3;\n\n    if(AmbientLightJS) {\n        for(var key of Object.keys(AmbientLightJS)) {\n            this[key] = AmbientLightJS[key];\n        }\n    }\n\n    var html = document.querySelector('html');\n    var debugElement = document.querySelector('#ambient-debug');\n    var toggles = [].slice.call(document.querySelectorAll('input[data-ambient=ambient]'));\n    var automaticToggles = [].slice.call(document.querySelectorAll('button[data-ambient=automatic]'));\n\n    var defaultState = true;\n    var currentState = defaultState;\n\n    var svgFilter = `\n            <svg xmlns=\"http://www.w3.org/2000/svg\">\n                <filter id=\"ambientjs-darken\">\n                    <feComponentTransfer>\n                        <feFuncR type=\"linear\" slope=\"${this.darkenFactor}\" />\n                        <feFuncG type=\"linear\" slope=\"${this.darkenFactor}\" />\n                        <feFuncB type=\"linear\" slope=\"${this.darkenFactor}\" />\n                    </feComponentTransfer>\n                </filter>\n            </svg>`;\n\n    var css = `\n            body {\n                transition: background-color ${this.transitionTime}s ease-in-out, color ${this.transitionTime}s ease-in-out;\n                -webkit-transition: background-color ${this.transitionTime}s ease-in-out, color ${this.transitionTime}s ease-in-out;\n            }\n\n            .ambient-dark body {\n                background-color: black;\n                color: #ccc;\n            }\n\n            .ambient-dark img.ambient {\n                -webkit-filter: url('#ambientjs-darken');\n                filter: url('#ambientjs-darken');\n            }\n        `;\n\n    this.isBright = function () {\n        return this.brightness >= this.threshold;\n    };\n\n    this.setState = function (isBright, element = html) {\n        if (isBright === currentState) {\n            return;\n        }\n        currentState = isBright;\n\n        element.classList.add(isBright ? this.brightClass : this.darkClass);\n        element.classList.remove(isBright ? this.darkClass : this.brightClass);\n\n        toggles.forEach(toggle => {\n            toggle.checked = !isBright;\n            toggle.dispatchEvent(new Event('change', {bubbles: true}));\n        });\n\n        this.debug();\n    };\n\n    this.setAutomatic = function (isAutomatic) {\n        this.automatic = isAutomatic;\n\n        automaticToggles.forEach((toggle) => {\n            if(isAutomatic) {\n                this.setState(this.isBright());\n                toggle.classList.add('active');\n            } else {\n                toggle.classList.remove('active');\n            }\n        });\n    };\n\n    this.debug = function () {\n        if (!debugElement) {\n            return;\n        }\n\n        var context = this.isBright() ? 'day' : 'night';\n        debugElement.innerHTML = `{ context: <span>${context}</span>, ambient light: <span>${this.brightness} lux</span>, threshold: <span>${this.threshold} lux</span>, automatic: <span>${this.automatic ? 'yes' : 'no'}</span> }`;\n    };\n\n    // Initialize the page to day/night mode\n    this.setState(defaultState);\n\n    // Add styles and svg filters to the document\n    var style = document.createElement('style');\n    style.appendChild(document.createTextNode(css));\n    document.head.appendChild(style);\n    document.write(svgFilter);\n\n    // Listen for changes in ambient light\n    window.addEventListener('devicelight', (event) => {\n        this.brightness = event.value;\n        this.debug();\n\n        if (this.automatic) {\n            this.setState(this.isBright());\n        }\n    });\n\n    // Listen for changes made by the user\n    toggles.forEach((toggle) => {\n        // TODO replace with addEventListener()\n        toggle.onchange = event => {\n            var isBright = !event.target.checked;\n\n            if (currentState !== isBright) {\n                this.setAutomatic(false);\n                this.setState(isBright);\n            }\n        };\n    });\n\n    automaticToggles.forEach((toggle) => {\n        toggle.addEventListener(\"click\", (event) => {\n            this.setAutomatic(!this.automatic);\n            this.debug();\n        });\n    });\n}\n\nwindow.AmbientLightJS = new AmbientLightJS();\n"]}