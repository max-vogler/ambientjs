{"version":3,"sources":["ambient.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,CAAC,YAAM;AACH,QAAI,IAAI,GAAG,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/C,WAAW,GAAG,gBAAgB;QAC9B,SAAS,GAAG,cAAc;QAC1B,SAAS,GAAG,EAAE;QACd,SAAS,GAAG,SAAS;QACrB,SAAS,GAAG,SAAS;QACrB,SAAS,GAAG,IAAI;QAChB,YAAY,GAAG,IAAI;QACnB,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC;QACvD,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,CAAC,CAAC;;AAEtF,aAAS,QAAQ,GAAoB;YAAnB,KAAK,yDAAG,SAAS;;AAC/B,eAAO,KAAK,IAAI,SAAS,CAAC;KAC7B;;AAED,aAAS,QAAQ,CAAC,QAAQ,EAAkB;YAAhB,OAAO,yDAAG,IAAI;;AACtC,YAAI,QAAQ,KAAK,SAAS,EAAE;AACxB,mBAAO;SACV;;AAED,iBAAS,GAAG,QAAQ,CAAC;AACrB,eAAO,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,GAAG,WAAW,GAAG,SAAS,CAAC,CAAC;AAC1D,eAAO,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,GAAG,SAAS,GAAG,WAAW,CAAC,CAAC;;AAE7D,eAAO,CAAC,OAAO,CAAC,UAAA,MAAM,EAAI;AACtB,kBAAM,CAAC,OAAO,GAAG,CAAC,QAAQ,CAAC;AAC3B,kBAAM,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;SAC9D,CAAC,CAAC;;AAEH,aAAK,EAAE,CAAC;KACX;;AAED,aAAS,KAAK,GAAG;AACb,YAAI,CAAC,YAAY,EAAE;AACf,mBAAO;SACV;;AAED,oBAAY,CAAC,SAAS,+BAA6B,SAAS,kCAA4B,SAAS,GAAG,KAAK,GAAG,OAAO,CAAA,kCAA6B,SAAS,uCAAiC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAA,cAAW,CAAC;KACjO;;;AAAA,AAGD,YAAQ,CAAC,YAAY,CAAC;;;AAAC,AAGvB,UAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,UAAA,KAAK,EAAI;AAC5C,iBAAS,GAAG,KAAK,CAAC,KAAK,CAAC;AACxB,aAAK,EAAE,CAAC;;AAER,YAAI,SAAS,EAAE;AACX,oBAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;SACxB;KACJ,CAAC;;;AAAC,AAGH,WAAO,CAAC,OAAO,CAAC,UAAA,MAAM,EAAI;AACtB,cAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAA,KAAK,EAAI;AACvC,gBAAI,QAAQ,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;;AAErC,gBAAI,SAAS,KAAK,QAAQ,EAAE;AACxB,yBAAS,GAAG,KAAK,CAAC;AAClB,wBAAQ,CAAC,QAAQ,CAAC,CAAC;aACtB;SACJ,CAAC,CAAC;KACN,CAAC,CAAC;CACN,CAAA,EAAG,CAAC","file":"ambient-compiled.js","sourcesContent":["'use strict';\n\n(() => {\n    var html = document.getElementsByTagName('html')[0],\n        brightClass = 'ambient-bright',\n        darkClass = 'ambient-dark',\n        threshold = 50,\n        lastValue = undefined,\n        lastState = undefined,\n        automatic = true,\n        defaultState = true,\n        debugElement = document.querySelector(\"#ambient-debug\"),\n        toggles = [].slice.call(document.querySelectorAll(\"input[data-ambient=ambient]\"));\n\n    function isBright(value = lastValue) {\n        return value >= threshold;\n    }\n\n    function setState(isBright, element = html) {\n        if (isBright === lastState) {\n            return;\n        }\n\n        lastState = isBright;\n        element.classList.add(isBright ? brightClass : darkClass);\n        element.classList.remove(isBright ? darkClass : brightClass);\n\n        toggles.forEach(toggle => {\n            toggle.checked = !isBright;\n            toggle.dispatchEvent(new Event('change', {bubbles: true}));\n        });\n\n        debug();\n    }\n\n    function debug() {\n        if (!debugElement) {\n            return;\n        }\n\n        debugElement.innerHTML = `{ ambient light: <span>${lastValue} lux</span>, mode: <span>${lastState ? 'day' : 'night'}</span>, threshold: <span>${threshold} lux</span>, automatic: <span>${automatic ? 'yes' : 'no'}</span> }`;\n    }\n\n    // Initialize the page to day/night mode\n    setState(defaultState);\n\n    // Listen for changes in ambient light\n    window.addEventListener(\"devicelight\", event => {\n        lastValue = event.value;\n        debug();\n\n        if (automatic) {\n            setState(isBright());\n        }\n    });\n\n    // Listen for changes made by the user\n    toggles.forEach(toggle => {\n        toggle.addEventListener(\"change\", event => {\n            var isBright = !event.target.checked;\n\n            if (lastState !== isBright) {\n                automatic = false;\n                setState(isBright);\n            }\n        });\n    });\n})();"]}